# Generated by Django 4.0 on 2022-12-17 13:44

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('full_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='amount must be greater than 0')])),
                ('available', models.IntegerField(default=-1)),
                ('serial', models.IntegerField(blank=True, default=None, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='locations',
            fields=[
                ('location', models.CharField(max_length=6, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='orders',
            fields=[
                ('order_number', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 44, 56, 552665))),
                ('return_date', models.DateTimeField(default=datetime.datetime(2023, 1, 6, 15, 44, 56, 552665))),
                ('status', models.IntegerField(choices=[(0, 'waiting'), (1, 'completed'), (2, 'collected')], default=0)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='products',
            fields=[
                ('sku', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('category', models.IntegerField(choices=[(0, 'Photographic products'), (1, 'Writing Tools')])),
                ('serial_item', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')])),
            ],
        ),
        migrations.CreateModel(
            name='specific_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='amount must be greater than 0')])),
                ('completed', models.BooleanField(default=False)),
                ('inventory_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.inventory')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.orders')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.products')),
            ],
        ),
        migrations.CreateModel(
            name='newInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('dt', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 44, 56, 552665))),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.products')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.locations'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.products'),
        ),
    ]
